DART

ES UN SOFTWARE MULTILENGUAJE, FACIL DE CONVERTIRLO EN ADROID NATIVE

variables
/////////////////// VAR ////////////////////////////////////

	var nombre = 'Javier'; la variable es tipo string,
	toda las variables por defecto son objetos,
	si no tiene un valor, a la variable por def seria null 
	
 example
	void main() {
  //FUNCION MAIN
  		var nombre;
    			print(nombre);

  		nombre = 'Javier';
 			print (nombre);
}

al principio la variable nombre no tiene un valor, asi que arroja null
en cuanto la variable nombre tiene un objeto, su valor es Javier
		
CONSOLE
			null
			Javier

/////////////////// IF (SÍ) ELSE (DE OTRO MODO) ///////////////////////////

void main() {
  //FUNCION MAIN
  var nombre;
      print(nombre);
  if(nombre is String) print ('nombre es string');
    else print ('nombre es de otro tipo');
  nombre = 'Javier';
  print (nombre);
}


/////////////////// dynamic variable ////////////////////////////////////
	es un tipo que nos permite definir que nuestra variable puede ir 
	cambiando y que no tenemos el tipo claro
	se utiliza cuando no sabemos que tipo de variable es

main(){
  
  var nombre;
  conocerTipo(nombre);
  nombre = 'Javier';
  conocerTipo(nombre);
}
  
conocerTipo(dynamic variable){
  if(variable is String) print('nombre es string');
    else print('nombre es de otro tipo');
}

AL NO TENER VALOR IMPRIME QUE ES DE OTRO TIPO
PERO CUANDO SE ASIGNA EL NOMBRE = A MIGUEL YA TIENE UN STRING

///////////////////////// FINAL AND CONST /////////////////////////////////

SON CONSTANTES QUE TENGAN UN VALOR QUE NO SE MODIFIQUE DURANTE LA EJECUCION 
DEL PROGRAMA
CUANDO LA VARIABLE LA TENEMOS CLARO QUE NO CAMBIARA

main(){

  final nombre = 'Javier';
  const pi=3.1416;

  // Cálculo del radio de una circunferencia
  // radio=circunferencia/(2*PI)

  const divisor=2*pi;
 var radio=15 / divisor;
  print( 'Radio:' + radio.toString());
  }

CONSOLE

Radio:2.387318563789152

///////////////////////// NUMEROS /////////////////////////////////

VARIABLE TIPO 
INT 
DOUBLE

// Función main
main(){
  // int

  int x =1;
  
  // double
  double y = 1.1;
  num z = -1;
  print( z.abs());
  print( y.ceil());
  print ( y.floor ());
    }

.ABS ESTA FUNCION SIRVE PARA CAMBIAR EL SIMBOLO 
.CEIL FUNCION OBTIENE EL NUMERO ENTERO SUPERIRO AL ACTUAL, 
	UN REDONDEO A LA ALZA
.FLOOR. REDONDEO AL ANTERIOR NUMERO ENTERO

double real = 1;// Dart convierte el valora 1.0
  
// String --> int
int uno = int.parse ('1');
  
// String --> double
double unoPuntoUno = double.parse ('1.1');
  
// int --> String
String cadenaUno = uno.toString();
  
double pi = 3.1416;
String cadenaPi = pi.toStringAsFixed(2);
print(cadenaPi);

	CONSOLE
1
2
1
3.14

// String --> int
  int a = int.parse ('0');
  int b = int.parse ('1');
  int c = int.parse ('2');
  int d = int.parse ('3');
  int f = int.parse ('4');
  int g = int.parse ('5');
  int h = int.parse ('6');
  int i = int.parse ('7');
  int j = int.parse ('8');
  int k = int.parse ('9');
  
  print(f*i);

// String --> double
  
  double cero = double.parse ('0');
  double uno = double.parse ('1');
  double dos = double.parse ('2');
  double tres = double.parse ('3');
  double cuatro = double.parse ('4');
  
  print(cuatro * dos);

console
28
8

///////////////////////// STRINGS /////////////////////////////////

CADENAS DE TEXTO PODEMOS DECLARAR VARIABLES

main(){
 var cadena1='Hola mundo';
 var cadena2="Hola mundo2";
  var cadena3='Yo dije:\'Hola mundo\'';
    
 // Concatenar strings
    
  var string1='Hola'
    ' Mundo';
  print(string1);
  
  var string2='Hola';
  var string3=' mundo';
  print(string2+string3);

// Expresiones en strings
var edad=32;
String frase='Mi edad es${edad}';
print(frase);

 print ('Mi saludo inicial: ${string2 + string3}');
  
  print ('2+2= ${2+2}');

}
console
Hola Mundo
Hola mundo
Mi edad es32
Mi saludo inicial: Hola mundo
2+2= 4

///////////////////////// BOOLEANS /////////////////////////////////

NOS PERMITE DEFINIR VARIABLES QUE SE ALMACENARAN DOS POSIBLES VALORES:
TRUE OR FALSE

SUELE UTILIZAR PARA REAIZAR CONDICIONES O EXPRESIONES  CONDICIONALES
EN LAS QUE NECESITAMOS UN VALOR BULEANO

main(){

  bool existe;
  if(existe)
     print('Existe es true');

  else
    print('Existe es false');
}

console 
existe es false

///////////////////////// LISTS /////////////////////////////////

AL INDICAR LAS POSICIONES .LENGH CUENTA DESDE EL NUMERAL 0

main(){
  
 var listaNumeros = [1,2,3,4,5];
  print(listaNumeros.length);

  var listPares = [2,4,6,8];
 print(listPares.length);
  
  print('Elemento de la posición2:${listPares[2]}');
  
  var listImpares = [3,5,7];
  print('Elemento de la posición1:${listImpares[1]}');
  
  // Modificar un elemento de la lista
  listImpares[1] = 9;
  print('Elemento de la posición1:${listImpares[1]}');
}

console 

5
4
Elemento de la posición2:6
Elemento de la posición1:5
Elemento de la posición1:9

///////////////////////// SETS /////////////////////////////////

SON LISTAS DESORDENADAS DE ELEMENTOS O CONJUNTOS

main(){
  Set <String> sistemasOperativos = {'Windows','MacOS','Ubuntu','CentOS'};
  
  print(sistemasOperativos);
  
  Set <String> sistemasOpMoviles = {'Android','ios'};
  
  sistemasOperativos.add('RedHat');
  print(sistemasOperativos);

  sistemasOperativos.addAll(sistemasOpMoviles);
  print(sistemasOperativos);
  }

CONSOLE
{Windows, MacOS, Ubuntu, CentOS}
{Windows, MacOS, Ubuntu, CentOS, RedHat}
{Windows, MacOS, Ubuntu, CentOS, RedHat, Android, ios}

///////////////////////// MAPS /////////////////////////////////

SON CONJUNTO DE ELEMENTOS QUE A DIFERENCIA DE LOS SETS, PERMITEN RELACIONARLOS 
A TRAVES DE UNA CLAVE VALOR, ES DECIR CADA ELEMENTO TIENE UNA CLAVE QUE LO 
IDENTIFICA DE UNA MANERA UNICA Y QUE NOS PERMITE OBTENER SU VALOR

main(){
 var idiomas = {

    // Clave:valor
    'es' : 'Español',
    'en' : 'Inglés',
    'fr' : 'Francés'
   };
  
 print(idiomas['es']);
  
  // Nuevo Map
 var nuevoIdioma={'ch':'Chino'};
  
  idiomas.addAll(nuevoIdioma);
  
  print(idiomas);
  
  var alumnos = Map();
  alumnos[1]='Miguel';
  alumnos[2]='Manuel';
  alumnos[3]='Olivia';
  alumnos[4]='Maria';
 print(alumnos);
}

console
Español
{es: Español, en: Inglés, fr: Francés, ch: Chino}
{1: Miguel, 2: Manuel, 3: Olivia, 4: Maria}

///////////////////////// RUNERS /////////////////////////////////
SON UNOS CODIGOS QUE NOS PERMITEN MEDIANTE STRINGS, DEFINIR ICONOS 
QUE PODEMOS UTILIZAR EN NUESTRO PROYECTO

main(){
  // Runes
  var coche='\u{1F697}';
  print(coche);

 Runes iconos = new Runes('\u{1F6A2}\u{1F6A4}\u{1F695}');
 print(new String.fromCharCodes(iconos));
}

console
🚗
🚢🚤🚕
